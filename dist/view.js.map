{"version":3,"file":"view.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/chrome-type.ts","webpack:///./src/components/hit.ts","webpack:///./src/components/suggest-view.ts","webpack:///./src/view.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/view.ts\");\n","export type Tab = chrome.tabs.Tab\nexport type HistoryItem = chrome.history.HistoryItem\nexport type BookmarkTreeNode = chrome.bookmarks.BookmarkTreeNode\nexport type ChromeItem = Tab | HistoryItem | BookmarkTreeNode\n\nexport function isTab(item: ChromeItem): item is Tab {\n  return (<Tab>item).active !== undefined\n}\n\nexport function isHistoryItem(item: ChromeItem): item is HistoryItem {\n  return (<HistoryItem>item).visitCount !== undefined\n}\n\nexport function isBookmarkTreeNode(item: ChromeItem): item is BookmarkTreeNode {\n  return (<BookmarkTreeNode>item).dateAdded !== undefined\n}\n","import { Tab, HistoryItem, BookmarkTreeNode, ChromeItem, isTab, isHistoryItem, isBookmarkTreeNode } from '../chrome-type'\nconst log = console.log\n\nconst cssName = {\n  card: 'card',\n  cardFocued: 'card--focused',\n  icon: 'card__icon',\n  data: 'card__dataWrapper',\n  title: 'card__title',\n  url: 'card__url',\n  close: 'card__close'\n}\n\nfunction containsEncodedComponents(x) {\n  // ie ?,=,&,/ etc\n  return (decodeURI(x) !== decodeURIComponent(x));\n}\n\n\nexport default class Hit extends HTMLElement {\n  private shadow: ShadowRoot\n  private itemID: number\n  private itemType: string\n  private wrapper: HTMLDivElement\n  private url: HTMLDivElement\n  private icon: HTMLImageElement\n  public name: HTMLDivElement\n  public focused: boolean\n  // public tabIndex: number\n\n  constructor () {\n    super()\n    this.shadow = this.attachShadow({ mode: 'open' })\n    this.wrapper = document.createElement('div')\n    this.wrapper.className = cssName.card\n    // icon\n    this.icon = document.createElement('img')\n    this.icon.className = cssName.icon\n    this.icon.width = 20\n    this.icon.height = 20\n\n    // data wrapper\n    const dataWrapper = document.createElement('div')\n    dataWrapper.className = cssName.data\n    // title\n    this.name = document.createElement('div')\n    this.name.className = cssName.title\n    // url\n    this.url = document.createElement('div')\n    // data wrapperに追加\n    dataWrapper.appendChild(this.name)\n    dataWrapper.appendChild(this.url)\n    // wrapperに追加\n    this.wrapper.appendChild(this.icon)\n    this.wrapper.appendChild(dataWrapper)\n    this.wrapper.addEventListener('click', this.openPage.bind(this))\n    // style\n    const style = document.createElement('style')\n    style.textContent = \"@import url('css/hit.css');\"\n    // shadow domに追加\n    this.shadow.appendChild(style)\n    this.shadow.appendChild(this.wrapper)\n\n    this.addEventListener('keydown', e => {\n      if(e.key === 'Enter') {\n        this.openPage()\n      }\n    })\n  }\n\n  /**\n   * ヒットにタイトルとURLとアイコンURLを設定する\n   * @param title website title\n   * @param url website url\n   * @param iconUrl website favicon url\n   */\n  public setContents(item: ChromeItem) {\n    // itemの基本情報の設定\n    // item.idがstringならnumberに変換\n    this.itemID = typeof item.id === 'string' ? parseInt(item.id) : item.id\n    // hitに表示するものを設定\n    this.name.innerText = item.title\n    \n    try {\n      this.url.innerText = decodeURI(item.url)\n    } catch(err) {\n      this.url.innerText = item.url\n    }\n\n    if (isTab(item)) {\n      this.itemType = 'tab'\n      // set icon\n      this.icon.src = item.favIconUrl\n      // closeボタンを追加\n      const closeButton = document.createElement('button')\n      closeButton.className = cssName.close\n      closeButton.innerText = `×` // close: <shortcut>にしたい\n      closeButton.addEventListener('click', this.closeTab.bind(this))\n      this.wrapper.appendChild(closeButton)\n    } else if (isHistoryItem(item)) {\n      this.itemType = 'history'\n      this.icon.src = './img/history.svg' // set icon\n    }\n    else if (isBookmarkTreeNode(item)) {\n      this.itemType = 'bookmark'\n      this.icon.src = './img/bookmark.svg' // set icon\n    }\n  }\n\n  /** \n   * hitがクリックされたら発動します\n   * openTabとopenPageの違いわかりづらいので名前を改善する\n   **/\n  public openPage() {\n    if (this.itemType === 'tab') {\n      chrome.tabs.update(this.itemID, {active: true}, tab => {\n        chrome.windows.update(tab.windowId, {focused: true})\n      })\n    } else if (this.itemType === 'bookmark') {\n      this.openTab()\n    } else if (this.itemType === 'history') {\n      this.openTab()\n    }\n  }\n\n  /** 新しいタブで開く */\n  public openTab() {\n    chrome.tabs.create({url: this.url.innerText})\n  }\n\n  /**\n   * タブを閉じ、リストから自身を削除する\n   */\n  public closeTab() {\n    chrome.tabs.remove(this.itemID)\n    this.parentNode.removeChild(this)\n  }\n\n  /** hitの状態を更新する */\n  public update(option: {focused: boolean} = {focused: false}) {\n    if(this.focused !== option.focused) {\n      this.focused = option.focused\n    }\n    this.updateStyle()\n  }\n\n  /**\n   * focusされたhitのためのstyle変更\n   */\n  private updateStyle(){\n    if (this.focused) {\n      this.wrapper.className = cssName.cardFocued\n    } else {\n      this.wrapper.className = cssName.card\n    }\n  }\n\n  /**\n   * フォーカスする\n   */\n  public focus() {\n    this.update({focused: true})\n    if (this.parentNode.firstChild === this) {\n      // 自身がfirst childなら一番上までスクロールする\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      })\n    } else {\n      this.scrollIntoView({behavior: 'smooth', block: 'nearest'})\n    }\n  }\n\n  /**\n   * フォーカスを外す\n   */\n  public blur() {\n    this.update({focused: false})\n  }\n}\n\ncustomElements.define('hit-view', Hit)","const log = console.log\nimport { Tab, HistoryItem, BookmarkTreeNode, ChromeItem } from '../chrome-type'\nimport Hit from './hit'\n\n/**\n * サジェスト用のviewクラス\n * 引数はidやclassをプロパティに持つobject\n */\nexport default class SuggestView extends HTMLElement {\n  public root: ShadowRoot\n  public searchbox: HTMLInputElement\n  public view: HTMLDivElement\n  private hit: Hit\n  private userInput: string = ''\n  private timerID: number\n\n  constructor() {\n    super()\n    // shadow root\n    this.root = this.attachShadow({mode:'open'})\n\n    // searchbox\n    this.searchbox = document.createElement('input')\n    this.searchbox.className = 'searchbox'\n\n    /**\n     * 検索ボックスに入力されたら検索する\n     */\n    this.searchbox.oninput = (e: InputEvent) => {\n      if (this.userInput !== this.searchbox.value) { // 入力によって値が変わった場合\n        this.clear()\n        if (this.searchbox.value === ''){ // 空ならタブを表示\n          this.showAllTabs()\n        } else {\n          window.clearTimeout(this.timerID)\n          this.timerID = window.setTimeout(this.search.bind(this), 300) // 0.3s\n        }\n        this.userInput = this.searchbox.value\n      }\n    }\n    /**\n     * searchboxのkeyboard event\n     */\n    this.searchbox.onkeydown = (e: any) => {\n      if (!e.isComposing) {\n        // tab keyを無効化\n        if (e.key === 'Tab') {\n          if (e.shiftKey) this.focusUp()\n          else this.focusDown()\n          return false\n        } else if (e.key === 'ArrowUp') {\n          this.focusUp()\n          return false\n        } else if (e.key === 'ArrowDown'){\n          this.focusDown()\n          return false\n        } else if (e.key === 'Enter') {\n          this.open()\n        }\n      }\n    }\n    this.root.appendChild(this.searchbox)\n    \n    // リストを表示するビュー\n    this.view = document.createElement('div')\n    this.view.className = 'view'\n    this.root.appendChild(this.view)\n    \n    // cloneの元になるhit\n    this.hit = new Hit()\n    \n    // style\n    const style = document.createElement('style')\n    style.textContent = \"@import url('css/hits.css');\"\n    this.root.appendChild(style)\n\n    // 描画時にやりたい処理\n    window.onload = () => {\n      this.searchbox.focus()\n      const rect = this.searchbox.getBoundingClientRect()\n      this.view.style.paddingTop = rect.bottom + 'px'\n      this.view.style.top = rect.bottom + 'px'\n      this.showAllTabs()\n    }\n  }\n\n  public search() {\n    chrome.runtime.sendMessage({searchWord: this.searchbox.value},\n      (res) => {\n        this.updateView(res.searchResult)\n    })\n  }\n\n  /**\n   * show all tabs\n   */\n  public showAllTabs() {\n    chrome.runtime.sendMessage({defaultSuggests: true}, res => {\n      res.defaultSuggests.forEach( (item, i) => {\n        const newHit = this.makeNewHit(item)\n        this.view.appendChild(newHit)\n      })\n    })\n  }\n\n  /**\n   * 検索結果を再描画\n   * @param {*} list \n   */\n  public updateView(list: any[]) {\n    list.forEach( (item, i) => {\n      // fuseはこちら fuseはitem.itemにする必要がある\n      const newHit = this.makeNewHit(item.item)\n      this.view.appendChild(newHit)\n    })\n  }\n\n  /** 新しいHitをつくって返す */\n  private makeNewHit(item: Tab|BookmarkTreeNode|HistoryItem) {\n    const newHit = <Hit>this.hit.cloneNode(true)\n    newHit.setContents(item)\n    return newHit\n  }\n\n  /**\n   * ビューを初期化\n   */\n  public clear() {\n    while(this.view.firstChild) {\n      this.view.removeChild(this.view.firstChild)\n    }\n  } \n\n  /**\n   * open an url of a focused hit\n   */\n  public open() {\n    const hits = this.getHits()\n    let focusCheck: boolean = true // focusedHitがあったかどうかを判定するために使う\n    hits.forEach( hit => {\n      if(hit.focused) {\n        hit.openPage()\n        focusCheck = false\n      }\n    })\n    if(focusCheck) { // focused hitがなければ検索\n      chrome.tabs.create({url: `https://www.google.com/search?q=${this.searchbox.value}`})\n    }\n  }\n  \n  public closeTab() {\n    const focused = this.getFocusedHit()\n    if (focused) focused.closeTab()\n  }\n\n  /**\n   * viewのchild elementをすべて取得する\n   */\n  public getHits(): Hit[] {\n    return <Hit[]>[...this.view.children]\n  }\n\n  /**\n   * focusされたhitを返す。なければfalseを返す\n   */\n  private getFocusedHit(): Hit|false {\n    const hits = this.getHits()\n    for (let hit of hits) if (hit.focused) return hit\n    return false\n  }\n\n  /**\n   * move Focus\n   * @param flag if flag is true focuse up, false focus down \n   */\n  private moveFocus(flag: boolean) {\n    const focused = this.getFocusedHit()\n    if (focused) { // focused hitがあるかどうかを判定\n      focused.blur()\n      // 次のhitがあれば次をfocus、なければ最初のhitをfocus\n      const nextNode = flag ? focused.nextSibling : focused.previousSibling\n      if(nextNode) {\n        const next = <Hit>nextNode\n        next.focus()\n        this.setPlaceHolder(next)\n      } else {\n        const next = <Hit>(flag ? this.view.firstChild : this.view.lastChild)\n        next.focus()\n        this.setPlaceHolder(next)\n      }\n    } else { // focused hitがなければ最初のhitをfocus\n      const next = <Hit>(flag ? this.view.firstChild : this.view.lastChild)\n      next.focus()\n      this.setPlaceHolder(next)\n    }\n  }\n\n  /**\n   * focus down\n   */\n  public focusDown() {\n    this.moveFocus(true)\n  }\n\n  /**\n   * focus up\n   */\n  public focusUp() {\n    this.moveFocus(false)\n  }\n\n\n  public setPlaceHolder(hit: Hit) {\n    this.searchbox.placeholder = hit.name.innerText\n  }\n}\n\ncustomElements.define('suggest-view', SuggestView)","import SuggestView from './components/suggest-view'\n\n// document.body.innerText = 'view.tsからの挨拶です'\nconst view = new SuggestView()\ndocument.body.appendChild(view)"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAhKA;AAkKA;;;;;;;;;;;;;;;ACrLA;AAEA;AAEA;;;AAGA;AACA;AAQA;AACA;AAJA;AAKA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AA/MA;AAiNA;;;;;;;;;;;;;;;ACzNA;AAEA;AACA;AACA;;;;;A","sourceRoot":""}