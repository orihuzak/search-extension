{"version":3,"sources":["chrome-type.ts","components/hit.ts","components/suggest-view.ts","view.ts"],"names":[],"mappings":"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","file":"view.js","sourceRoot":"../src","sourcesContent":["export type Tab = chrome.tabs.Tab\nexport type HistoryItem = chrome.history.HistoryItem\nexport type BookmarkTreeNode = chrome.bookmarks.BookmarkTreeNode\nexport type ChromeItem = Tab | HistoryItem | BookmarkTreeNode\n\nexport function isTab(item: ChromeItem): item is Tab {\n  return (<Tab>item).active !== undefined\n}\n\nexport function isHistoryItem(item: ChromeItem): item is HistoryItem {\n  return (<HistoryItem>item).visitCount !== undefined\n}\n\nexport function isBookmarkTreeNode(item: ChromeItem): item is BookmarkTreeNode {\n  return (<BookmarkTreeNode>item).dateAdded !== undefined\n}\n","import { Tab, HistoryItem, BookmarkTreeNode, ChromeItem, isTab, isHistoryItem, isBookmarkTreeNode } from '../chrome-type'\nconst log = console.log\n\nconst cssName = {\n  card: 'card',\n  cardFocued: 'card--focused',\n  icon: 'card__icon',\n  data: 'card__dataWrapper',\n  title: 'card__title',\n  url: 'card__url',\n  close: 'card__close'\n}\n\nexport default class Hit extends HTMLElement {\n  private shadow: ShadowRoot\n  private itemID: number\n  private itemType: string\n  private wrapper: HTMLDivElement\n  private url: HTMLDivElement\n  private icon: HTMLImageElement\n  public name: HTMLDivElement\n  public focused: boolean\n  // public tabIndex: number\n\n  constructor () {\n    super()\n    this.shadow = this.attachShadow({ mode: 'open' })\n    this.wrapper = document.createElement('div')\n    this.wrapper.className = cssName.card\n    // icon\n    this.icon = document.createElement('img')\n    this.icon.className = cssName.icon\n    this.icon.width = 20\n    this.icon.height = 20\n\n    // data wrapper\n    const dataWrapper = document.createElement('div')\n    dataWrapper.className = cssName.data\n    // title\n    this.name = document.createElement('div')\n    this.name.className = cssName.title\n    // url\n    this.url = document.createElement('div')\n    // data wrapperに追加\n    dataWrapper.appendChild(this.name)\n    dataWrapper.appendChild(this.url)\n    // wrapperに追加\n    this.wrapper.appendChild(this.icon)\n    this.wrapper.appendChild(dataWrapper)\n    this.wrapper.addEventListener('click', this.openPage.bind(this))\n    // style\n    const style = document.createElement('style')\n    style.textContent = \"@import url('css/hit.css');\"\n    // shadow domに追加\n    this.shadow.appendChild(style)\n    this.shadow.appendChild(this.wrapper)\n\n    this.addEventListener('keydown', e => {\n      if(e.key === 'Enter') {\n        this.openPage()\n      }\n    })\n  }\n\n  /**\n   * ヒットにタイトルとURLとアイコンURLを設定する\n   * @param title website title\n   * @param url website url\n   * @param iconUrl website favicon url\n   */\n  public setContents(item: ChromeItem) {\n    // itemの基本情報の設定\n    // item.idがstringならnumberに変換\n    this.itemID = typeof item.id === 'string' ? parseInt(item.id) : item.id\n    // hitに表示するものを設定\n    this.name.innerText = item.title\n    this.url.innerText = decodeURI(item.url)\n    if (isTab(item)) {\n      this.itemType = 'tab'\n      // set icon\n      this.icon.src = item.favIconUrl\n      // closeボタンを追加\n      const closeButton = document.createElement('button')\n      closeButton.className = cssName.close\n      closeButton.innerText = `×` // close: <shortcut>にしたい\n      closeButton.addEventListener('click', this.closeTab.bind(this))\n      this.wrapper.appendChild(closeButton)\n    } else if (isHistoryItem(item)) {\n      this.itemType = 'history'\n      this.icon.src = './img/history.svg' // set icon\n    }\n    else if (isBookmarkTreeNode(item)) {\n      this.itemType = 'bookmark'\n      this.icon.src = './img/bookmark.svg' // set icon\n    }\n  }\n\n  /** \n   * hitがクリックされたら発動します\n   * openTabとopenPageの違いわかりづらいので名前を改善する\n   **/\n  public openPage() {\n    if (this.itemType === 'tab') {\n      chrome.tabs.update(this.itemID, {active: true}, tab => {\n        chrome.windows.update(tab.windowId, {focused: true})\n      })\n    } else if (this.itemType === 'bookmark') {\n      this.openTab()\n    } else if (this.itemType === 'history') {\n      this.openTab()\n    }\n  }\n\n  /** 新しいタブで開く */\n  public openTab() {\n    chrome.tabs.create({url: this.url.innerText})\n  }\n\n  /**\n   * タブを閉じ、リストから自身を削除する\n   */\n  public closeTab() {\n    chrome.tabs.remove(this.itemID)\n    this.parentNode.removeChild(this)\n  }\n\n  /** hitの状態を更新する */\n  public update(option: {focused: boolean} = {focused: false}) {\n    if(this.focused !== option.focused) {\n      this.focused = option.focused\n    }\n    this.updateStyle()\n  }\n\n  /**\n   * focusされたhitのためのstyle変更\n   */\n  private updateStyle(){\n    if (this.focused) {\n      this.wrapper.className = cssName.cardFocued\n    } else {\n      this.wrapper.className = cssName.card\n    }\n  }\n\n  /**\n   * フォーカスする\n   */\n  public focus() {\n    this.update({focused: true})\n    if (this.parentNode.firstChild === this) {\n      // 自身がfirst childなら一番上までスクロールする\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      })\n    } else {\n      this.scrollIntoView({behavior: 'smooth', block: 'nearest'})\n    }\n  }\n\n  /**\n   * フォーカスを外す\n   */\n  public blur() {\n    this.update({focused: false})\n  }\n}\n\ncustomElements.define('hit-view', Hit)","const log = console.log\nimport { Tab, HistoryItem, BookmarkTreeNode, ChromeItem } from '../chrome-type'\nimport Hit from './hit'\n\n/**\n * サジェスト用のviewクラス\n * 引数はidやclassをプロパティに持つobject\n */\nexport default class SuggestView extends HTMLElement {\n  public root: ShadowRoot\n  public searchbox: HTMLInputElement\n  public view: HTMLDivElement\n  private hit: Hit\n  private userInput: string = ''\n  private timerID: number\n\n  constructor() {\n    super()\n    // shadow root\n    this.root = this.attachShadow({mode:'open'})\n\n    // searchbox\n    this.searchbox = document.createElement('input')\n    this.searchbox.className = 'searchbox'\n    this.searchbox.autofocus = true\n\n    /**\n     * 検索ボックスに入力されたら検索する\n     */\n    this.searchbox.oninput = (e: InputEvent) => {\n      if (this.userInput !== this.searchbox.value) { // 入力によって値が変わった場合\n        this.clear()\n        if (this.searchbox.value === ''){ // 空ならタブを表示\n          this.showAllTabs()\n        } else {\n          window.clearTimeout(this.timerID)\n          this.timerID = window.setTimeout(this.search.bind(this), 300) // 0.3s\n        }\n        this.userInput = this.searchbox.value\n      }\n    }\n    /**\n     * searchboxのkeyboard event\n     */\n    this.searchbox.onkeydown = (e: any) => {\n      if (!e.isComposing) {\n        // tab keyを無効化\n        if (e.key === 'Tab') {\n          if (e.shiftKey) this.focusUp()\n          else this.focusDown()\n          return false\n        } else if (e.key === 'ArrowUp') {\n          this.focusUp()\n          return false\n        } else if (e.key === 'ArrowDown'){\n          this.focusDown()\n          return false\n        } else if (e.key === 'Enter') {\n          this.open()\n        }\n      }\n    }\n    this.root.appendChild(this.searchbox)\n    \n    // リストを表示するビュー\n    this.view = document.createElement('div')\n    this.view.className = 'view'\n    this.root.appendChild(this.view)\n    \n    // cloneの元になるhit\n    this.hit = new Hit()\n    \n    // style\n    const style = document.createElement('style')\n    style.textContent = \"@import url('css/hits.css');\"\n    this.root.appendChild(style)\n\n    // 描画時にやりたい処理\n    window.onload = () => {\n      this.searchbox.focus()\n      const rect = this.searchbox.getBoundingClientRect()\n      this.view.style.paddingTop = rect.bottom + 'px'\n      this.view.style.top = rect.bottom + 'px'\n      this.showAllTabs()\n    }\n  }\n\n  public search() {\n    chrome.runtime.sendMessage({searchWord: this.searchbox.value},\n      (res) => {\n        this.updateView(res.searchResult)\n    })\n  }\n\n  /**\n   * show all tabs\n   */\n  public showAllTabs() {\n    chrome.runtime.sendMessage({defaultSuggests: true}, res => {\n      res.defaultSuggests.forEach( (item, i) => {\n        const newHit = this.makeNewHit(item)\n        this.view.appendChild(newHit)\n      })\n    })\n  }\n\n  /**\n   * 検索結果を再描画\n   * @param {*} list \n   */\n  public updateView(list: any[]) {\n    list.forEach( (item, i) => {\n      const newHit = this.makeNewHit(item.item)\n      this.view.appendChild(newHit)\n    })\n  }\n\n  /** 新しいHitをつくって返す */\n  private makeNewHit(item: Tab|BookmarkTreeNode|HistoryItem) {\n    const newHit = <Hit>this.hit.cloneNode(true)\n    newHit.setContents(item)\n    return newHit\n  }\n\n  /**\n   * ビューを初期化\n   */\n  public clear() {\n    while(this.view.firstChild) {\n      this.view.removeChild(this.view.firstChild)\n    }\n  } \n\n  /**\n   * open an url of a focused hit\n   */\n  public open() {\n    const hits = this.getHits()\n    let focusCheck: boolean = true // focusedHitがあったかどうかを判定するために使う\n    hits.forEach( hit => {\n      if(hit.focused) {\n        hit.openPage()\n        focusCheck = false\n      }\n    })\n    if(focusCheck) { // focused hitがなければ検索\n      chrome.tabs.create({url: `https://www.google.com/search?q=${this.searchbox.value}`})\n    }\n  }\n  \n  public closeTab() {\n    const focused = this.getFocusedHit()\n    if (focused) focused.closeTab()\n  }\n\n  /**\n   * viewのchild elementをすべて取得する\n   */\n  public getHits(): Hit[] {\n    return <Hit[]>[...this.view.children]\n  }\n\n  /**\n   * focusされたhitを返す。なければfalseを返す\n   */\n  private getFocusedHit(): Hit|false {\n    const hits = this.getHits()\n    for (let hit of hits) if (hit.focused) return hit\n    return false\n  }\n\n  /**\n   * move Focus\n   * @param flag if flag is true focuse up, false focus down \n   */\n  private moveFocus(flag: boolean) {\n    const focused = this.getFocusedHit()\n    if (focused) { // focused hitがあるかどうかを判定\n      focused.blur()\n      // 次のhitがあれば次をfocus、なければ最初のhitをfocus\n      const nextNode = flag ? focused.nextSibling : focused.previousSibling\n      if(nextNode) {\n        const next = <Hit>nextNode\n        next.focus()\n        this.setPlaceHolder(next)\n      } else {\n        const next = <Hit>(flag ? this.view.firstChild : this.view.lastChild)\n        next.focus()\n        this.setPlaceHolder(next)\n      }\n    } else { // focused hitがなければ最初のhitをfocus\n      const next = <Hit>(flag ? this.view.firstChild : this.view.lastChild)\n      next.focus()\n      this.setPlaceHolder(next)\n    }\n  }\n\n  /**\n   * focus down\n   */\n  public focusDown() {\n    this.moveFocus(true)\n  }\n\n  /**\n   * focus up\n   */\n  public focusUp() {\n    this.moveFocus(false)\n  }\n\n\n  public setPlaceHolder(hit: Hit) {\n    this.searchbox.placeholder = hit.name.innerText\n  }\n}\n\ncustomElements.define('suggest-view', SuggestView)","import SuggestView from './components/suggest-view'\n\n// document.body.innerText = 'view.tsからの挨拶です'\nconst view = new SuggestView()\ndocument.body.appendChild(view)"]}